<?xml version="1.0" encoding="UTF-8"?>
<!-- xmlns namespace 配完后，有自动提示 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       		http://www.springframework.org/schema/beans/spring-beans.xsd 
       		http://www.springframework.org/schema/context 
       		http://www.springframework.org/schema/context/spring-context.xsd 
			http://www.springframework.org/schema/aop        		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       		http://www.springframework.org/schema/tx 
       		http://www.springframework.org/schema/tx/spring-tx.xsd
       		http://www.springframework.org/schema/mvc       		http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 加载src/main/resources/properties下所有properties文件 -->
	<context:property-placeholder 
	location="classpath:properties/*.properties"/>
	<!-- 1,配置数据库连接 -->
	<beans:bean id="jdbcDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="username" value="${jdbc.username}">
		</beans:property>
		<beans:property name="password" value="${jdbc.password}">
		</beans:property>
		<beans:property name="url"
			value="${jdbc.url}">
		</beans:property>
		<beans:property name="driverClassName" value="${jdbc.driver}">
		</beans:property>
	</beans:bean>
	<!-- 2,注册sqlsessionFactory -->
	<beans:bean 
	id="sqlSessionFactoryBean"
	class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 2.1 配置连接 -->
	<beans:property name="dataSource" ref="jdbcDataSource">
	</beans:property>
	<!-- 2.2 配置mapper.xml的位置 -->
	<beans:property name="mapperLocations"
	value="classpath:com/pd/mapper/*.xml"
	></beans:property>
	<!-- 加载分页配置 -->
	<beans:property name="configLocation" 
	value="classpath:mybatis/page.xml">
	</beans:property>
	</beans:bean>
	<!-- 3,扫描com.pd.mapper下的所有操作数据库的接口 -->
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<beans:property name="basePackage" value="com.pd.mapper"></beans:property>
	</beans:bean>
	
	<!-- 配置组件扫描，扫描service -->
	<context:component-scan base-package="com.pd">
	<!-- springmvc.xml中已经扫描过com.pd.controller中@controller -->
	<context:exclude-filter type="annotation" 
	expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
<!-- 事务管理器 -->
<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!-- 数据源 -->
<beans:property name="dataSource" ref="jdbcDataSource"></beans:property>
</beans:bean>
<!-- 通知，执行那些方法（insert,delete,update）的时候，启用事务 -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
<tx:attributes>
<!-- propagation 设置事务传播行为 requiered值表示，
没有事务，就创建一个新的 -->
<tx:method name="save*" propagation="REQUIRED"/>
<tx:method name="delete*" propagation="REQUIRED"/>
<tx:method name="update*" propagation="REQUIRED"/>
</tx:attributes>
</tx:advice>
<!-- 事务是用aop 动态代理实现的，发现有一个操作失败了，自动把所有的操作都取消 -->
<aop:config>
<!--pointcut 切点  -->
<aop:advisor advice-ref="txAdvice"
 pointcut="execution(* com.pd.service.*.*(..))"/>
</aop:config>
</beans>





